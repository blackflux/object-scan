workflows:
  node-multi-build:
    jobs:
      - gally-create-pr
      - test-node-v20:
          requires:
            - gally-create-pr
      - test-node-v23:
          requires:
            - gally-create-pr
      - test-node-v22:
          requires:
            - gally-create-pr
      - gally-auto-approve:
          requires:
            - gally-create-pr
            - test-node-v20
            - test-node-v23
            - test-node-v22
          filters:
            branches:
              only: /dependabot\/.*/
      - release:
          requires:
            - gally-create-pr
            - test-node-v20
            - test-node-v23
            - test-node-v22
          filters:
            branches:
              only: master
version: 2.1
jobs:
  gally-create-pr:
    docker:
      - image: cimg/node:20.11
    steps:
      - checkout
      - run: sudo yarn global add gally
      - run: ga promote $CIRCLE_BRANCH
  release:
    docker:
      - image: cimg/node:22.13
    steps:
      - checkout
      - run:
          command: |
            # sync submodules as checkout doesn't do this automatically
            if [[ $(git config --file .gitmodules --get-regexp path) ]]; then
              git submodule sync && git submodule update --init
            fi
      - run:
          command: |
            if [[ -n "${NPM_TOKEN}" ]]; then
              echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
            fi
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - run:
          name: Install Dependencies
          command: yarn install --frozen-lockfile
      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packages-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - run: yarn global add "semantic-release@^19.0.5"
      - run: yarn run semantic-release
  gally-auto-approve:
    docker:
      - image: cimg/node:20.11
    steps:
      - run:
          name: Set PR number
          command: >
            echo 'export
            CIRCLE_PR_NUMBER="${CIRCLE_PR_NUMBER:-${CIRCLE_PULL_REQUEST##*/}}"'
            >> $BASH_ENV

            source $BASH_ENV

            echo $CIRCLE_PR_NUMBER
      - checkout
      - run: sudo yarn global add gally
      - run: >-
          ga approve $CIRCLE_PR_NUMBER --condition
          "base.ref=dev&state=open&user.login=dependabot-preview[bot]"
  test-node-v20:
    docker:
      - image: cimg/node:20.18
    steps:
      - checkout
      - run:
          command: |
            # sync submodules as checkout doesn't do this automatically
            if [[ $(git config --file .gitmodules --get-regexp path) ]]; then
              git submodule sync && git submodule update --init
            fi
      - run:
          command: |
            if [[ -n "${NPM_TOKEN}" ]]; then
              echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
            fi
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - run:
          name: Install Dependencies
          command: yarn install --frozen-lockfile
      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packages-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - run: yarn test
      - run: >-
          (git add . && git diff-index --quiet HEAD --) || (git status && exit
          1);
  test-node-v23:
    docker:
      - image: cimg/node:23.6
    steps:
      - checkout
      - run:
          command: |
            # sync submodules as checkout doesn't do this automatically
            if [[ $(git config --file .gitmodules --get-regexp path) ]]; then
              git submodule sync && git submodule update --init
            fi
      - run:
          command: |
            if [[ -n "${NPM_TOKEN}" ]]; then
              echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
            fi
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - run:
          name: Install Dependencies
          command: yarn install --frozen-lockfile
      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packages-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - run: yarn test
      - run: >-
          (git add . && git diff-index --quiet HEAD --) || (git status && exit
          1);
  test-node-v22:
    docker:
      - image: cimg/node:22.13
    steps:
      - checkout
      - run:
          command: |
            # sync submodules as checkout doesn't do this automatically
            if [[ $(git config --file .gitmodules --get-regexp path) ]]; then
              git submodule sync && git submodule update --init
            fi
      - run:
          command: |
            if [[ -n "${NPM_TOKEN}" ]]; then
              echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
            fi
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - run:
          name: Install Dependencies
          command: yarn install --frozen-lockfile
      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packages-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - run: yarn test
      - run: >-
          (git add . && git diff-index --quiet HEAD --) || (git status && exit
          1);
